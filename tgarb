-- Auto Walk: Base ↔ Door ↔ Normal Box Loop
-- LocalScript داخل StarterPlayerScripts

local Players = game:GetService("Players")
local PathfindingService = game:GetService("PathfindingService")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local function getChar()
	return player.Character or player.CharacterAdded:Wait()
end

local function computePath(startPos, goalPos)
	local path = PathfindingService:CreatePath({
		AgentRadius = 2.5,
		AgentHeight = 5,
		AgentCanJump = true
	})
	path:ComputeAsync(startPos, goalPos)
	if path.Status == Enum.PathStatus.Success then
		return path
	end
	return nil
end

local function goTo(targetPos)
	local char = getChar()
	local hum = char:WaitForChild("Humanoid")
	local hrp = char:WaitForChild("HumanoidRootPart")

	local path = computePath(hrp.Position, targetPos)
	if not path then return end

	for _, wp in ipairs(path:GetWaypoints()) do
		if wp.Action == Enum.PathWaypointAction.Jump then
			hum.Jump = true
		end
		hum:MoveTo(wp.Position)
		hum.MoveToFinished:Wait()
	end
end

-- يجيب جميع Base Parts في الخريطة
local function getAllBases()
	local bases = {}
	for _, d in ipairs(workspace:GetDescendants()) do
		if d:IsA("BasePart") and d.Name:lower() == "base" then
			table.insert(bases, d)
		end
	end
	return bases
end

-- يجيب Normal Box (واحد فقط حسب كلامك)
local function getNormalBox()
	for _, d in ipairs(workspace:GetDescendants()) do
		if d:IsA("BasePart") and d.Name:lower():find("normal") then
			return d
		end
	end
	return nil
end

-- يتفاعل مع أي ProximityPrompt داخل البارت
local function interactProximity(bar)
	if not bar then return end
	for _, obj in ipairs(bar:GetDescendants()) do
		if obj:IsA("ProximityPrompt") then
			for i = 1,5 do
				obj:InputHoldBegin()
				wait(0.1)
				obj:InputHoldEnd()
				wait(0.2)
			end
		end
	end
end

-- يبحث عن الباب المتحرك بين Base/Normal Box ويذهب عبره
local function goThroughDoor(door)
	if not door then return end
	goTo(door.Position + Vector3.new(0,2,0))
end

-- Main Loop
local function autoLoop()
	local bases = getAllBases()
	local normalBox = getNormalBox()
	if not normalBox then return end

	local door = workspace:FindFirstChild("Door") -- غير الاسم حسب بابك إذا مختلف

	while true do
		for _, base in ipairs(bases) do
			-- يذهب للـ Base
			goTo(base.Position + Vector3.new(0,2,0))
			-- بعد Base يذهب للباب
			if door then goThroughDoor(door) end
			-- يذهب للـ Normal Box ويضغط البروكسي
			goTo(normalBox.Position + Vector3.new(0,2,0))
			interactProximity(normalBox)
			-- بعد Normal Box يذهب مرة ثانية للباب قبل العودة للـ Base التالي
			if door then goThroughDoor(door) end
		end
	end
end

-- يبدأ السكربت
spawn(autoLoop)
