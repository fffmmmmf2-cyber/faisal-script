-- Teleport & Move Script
-- by Faisal

-- GUI
local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local UICorner = Instance.new("UICorner")
local Drag = Instance.new("TextLabel")
local TeleportBtn = Instance.new("TextButton")

ScreenGui.Parent = game.CoreGui
ScreenGui.Name = "TeleportHackGUI"

Frame.Parent = ScreenGui
Frame.BackgroundColor3 = Color3.fromRGB(25,25,25)
Frame.Size = UDim2.new(0,200,0,100)
Frame.Position = UDim2.new(0.4,0,0.3,0)

UICorner.CornerRadius = UDim.new(0,12)
UICorner.Parent = Frame

Drag.Parent = Frame
Drag.Size = UDim2.new(1,0,0.2,0)
Drag.BackgroundTransparency = 1
Drag.Text = "üîπ ÿßÿ≥ÿ≠ÿ® ŸÑŸÑÿ™ÿ≠ÿ±ŸäŸÉ"
Drag.TextColor3 = Color3.new(1,1,1)

TeleportBtn.Parent = Frame
TeleportBtn.Size = UDim2.new(0.9,0,0.6,0)
TeleportBtn.Position = UDim2.new(0.05,0,0.25,0)
TeleportBtn.Text = "üöÄ ÿßŸÜÿ™ŸÇÿßŸÑ"
TeleportBtn.BackgroundColor3 = Color3.fromRGB(0,170,255)
TeleportBtn.TextColor3 = Color3.new(1,1,1)

-- Draggable
local UIS = game:GetService("UserInputService")
local dragging = false
local dragStart, startPos

local function update(input)
    local delta = input.Position - dragStart
    Frame.Position = UDim2.new(
        startPos.X.Scale, startPos.X.Offset + delta.X,
        startPos.Y.Scale, startPos.Y.Offset + delta.Y
    )
end

Drag.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = Frame.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

UIS.InputChanged:Connect(function(input)
    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        update(input)
    end
end)

-- Teleport & Movement Logic
local Players = game:GetService("Players")
local plr = Players.LocalPlayer
local char = plr.Character or plr.CharacterAdded:Wait()
local humroot = char:WaitForChild("HumanoidRootPart")

-- ÿ≠ŸÅÿ∏ ÿ£ŸÇÿ±ÿ® Slope ÿπŸÜÿØ ÿßŸÑÿ™ŸÜŸÅŸäÿ∞
local function findClosestPart()
    local nearest, dist = nil, math.huge
    for _, obj in ipairs(workspace:GetDescendants()) do
        if obj:IsA("BasePart") and string.lower(obj.Name) == "slope" then
            local d = (humroot.Position - obj.Position).Magnitude
            if d < dist then
                dist = d
                nearest = obj
            end
        end
    end
    return nearest
end

local savedPart = findClosestPart()

-- ÿ™ÿ´ÿ®Ÿäÿ™ Ÿàÿ™ÿ≠ÿ±ŸäŸÉ ÿßŸÑÿ¨ÿ≥ŸÖ
local function stickAndMove()
    local partsToStick = {}
    for _, part in ipairs(char:GetChildren()) do
        if part:IsA("BasePart") then
            table.insert(partsToStick, part)
        end
    end

    local offsets = {
        Vector3.new(0,0,5),  -- ÿ£ŸÖÿßŸÖ
        Vector3.new(0,0,-5), -- ÿÆŸÑŸÅ
        Vector3.new(5,0,0),  -- ŸäŸÖŸäŸÜ
        Vector3.new(-5,0,0)  -- Ÿäÿ≥ÿßÿ±
    }

    local moveDuration = 5 -- ŸÖÿØÿ© ÿßŸÑÿ™ÿ´ÿ®Ÿäÿ™ ÿ®ÿßŸÑÿ´ŸàÿßŸÜŸä
    local interval = moveDuration / #offsets

    -- ÿ™ÿ´ÿ®Ÿäÿ™ ÿßŸÑÿ¨ÿ≥ŸÖ
    for _, part in ipairs(partsToStick) do
        part.Anchored = true
        part.CFrame = savedPart.CFrame
    end

    -- ÿ™ÿ≠ÿ±ŸäŸÉ ÿßŸÑÿ¨ÿ≥ŸÖ
    for _, offset in ipairs(offsets) do
        for _, part in ipairs(partsToStick) do
            part.CFrame = savedPart.CFrame + offset
        end
        task.wait(interval)
    end

    -- ŸÅŸÉ ÿßŸÑÿ™ÿ´ÿ®Ÿäÿ™ ÿ®ÿπÿØ ÿßŸÑŸÖÿØÿ©
    for _, part in ipairs(partsToStick) do
        part.Anchored = false
    end
end

TeleportBtn.MouseButton1Click:Connect(function()
    if savedPart then
        humroot.CFrame = savedPart.CFrame + Vector3.new(0,5,0)
        task.spawn(stickAndMove)
    end
end)
