local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local hrp = character:WaitForChild("HumanoidRootPart")
local workspace = game:GetService("Workspace")

local mainDistance = 15
local nearbyDistance = 3
local minDistance = 0.5 -- أقل مسافة عن اللاعب
local enlargedParts = {}

-- أسماء أجزاء جسم اللاعب لتجاهلها
local playerParts = {}
for _, part in pairs(character:GetDescendants()) do
	if part:IsA("BasePart") then
		playerParts[part] = true
	end
end

local function matchName(name)
	name = string.lower(name)
	name = string.gsub(name,"%s+","")
	return name == "bombhandle"
end

local function isPlayerPart(obj)
	if obj:IsDescendantOf(character) then
		return true
	end
	return false
end

local function enlarge(obj)
	if obj and not enlargedParts[obj] and not isPlayerPart(obj) then
		if obj:IsA("BasePart") then
			obj.Size = obj.Size * 2
		elseif obj:IsA("Model") then
			local primary = obj.PrimaryPart or obj:FindFirstChildWhichIsA("BasePart")
			if primary then
				obj:ScaleTo(2)
			end
		end
		enlargedParts[obj] = true
	end
end

while true do
	for _, obj in pairs(workspace:GetDescendants()) do
		if (obj:IsA("BasePart") or obj:IsA("Model")) and matchName(obj.Name) then
			local objPos
			if obj:IsA("BasePart") then
				objPos = obj.Position
			elseif obj:IsA("Model") then
				local primary = obj.PrimaryPart or obj:FindFirstChildWhichIsA("BasePart")
				if primary then
					objPos = primary.Position
				end
			end

			if objPos then
				local dist = (hrp.Position - objPos).Magnitude
				if dist >= minDistance and dist <= mainDistance then
					enlarge(obj)

					-- نكبر أي بارث قريب جداً من هذا البارت (2–3 ستود)
					for _, nearby in pairs(workspace:GetDescendants()) do
						if (nearby:IsA("BasePart") or nearby:IsA("Model")) and not enlargedParts[nearby] then
							local nearbyPos
							if nearby:IsA("BasePart") then
								nearbyPos = nearby.Position
							elseif nearby:IsA("Model") then
								local primary = nearby.PrimaryPart or nearby:FindFirstChildWhichIsA("BasePart")
								if primary then
									nearbyPos = primary.Position
								end
							end
							if nearbyPos and (objPos - nearbyPos).Magnitude <= nearbyDistance and not isPlayerPart(nearby) then
								enlarge(nearby)
							end
						end
					end
				end
			end
		end
	end
	task.wait(0.5)
end
