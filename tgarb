local Players = game:GetService("Players")

local HEALTH_THRESHOLD = 30
local RIGHT_OFFSET_STUDS = 200
local CHECK_DELAY = 0.25 -- كل ربع ثانية
local activePlayers = {}

-- وظيفة عرض رسالة على شاشة اللاعب
local function showMessage(player, text)
	local gui = Instance.new("ScreenGui")
	gui.Name = "SystemMessage"
	gui.ResetOnSpawn = false
	
	local label = Instance.new("TextLabel")
	label.Size = UDim2.new(0.3, 0, 0, 50)
	label.Position = UDim2.new(0.7, 0, 0.85, 0) -- تحت يمين
	label.BackgroundTransparency = 0.3
	label.BackgroundColor3 = Color3.new(0, 0, 0)
	label.TextColor3 = Color3.new(1, 0.8, 0)
	label.Font = Enum.Font.SourceSansBold
	label.TextScaled = true
	label.Text = text
	label.Parent = gui
	
	gui.Parent = player:WaitForChild("PlayerGui")
	
	-- يختفي بعد 3 ثواني
	task.delay(3, function()
		if gui and gui.Parent then
			gui:Destroy()
		end
	end)
end

local function freezeCharacter(player, character)
	if not character then return end
	local hrp = character:FindFirstChild("HumanoidRootPart")
	local humanoid = character:FindFirstChildOfClass("Humanoid")
	if not hrp or not humanoid then return end

	if activePlayers[player] then return end
	activePlayers[player] = true

	local oldWalkSpeed = humanoid.WalkSpeed
	local oldJumpPower = humanoid.JumpPower

	-- حساب مكان النقل يمين الشخصية
	local rightOffset = hrp.CFrame.RightVector * RIGHT_OFFSET_STUDS
	local targetCFrame = hrp.CFrame + rightOffset

	-- نقل اللاعب
	hrp.CFrame = targetCFrame

	-- تجميد البارتس
	local anchoredParts = {}
	for _, part in pairs(character:GetDescendants()) do
		if part:IsA("BasePart") then
			table.insert(anchoredParts, part)
			part.Anchored = true
		end
	end

	-- تعطيل الحركة
	humanoid.WalkSpeed = 0
	humanoid.JumpPower = 0

	-- عرض الرسالة
	showMessage(player, "تم تفعيل السكربت")

	-- متابعة لحد الموت
	task.spawn(function()
		while humanoid.Health > 0 and player.Character == character do
			if hrp and hrp.Parent then
				hrp.CFrame = targetCFrame
			end
			task.wait(CHECK_DELAY)
		end

		-- استرجاع القيم
		for _, part in ipairs(anchoredParts) do
			if part and part.Parent then
				part.Anchored = false
			end
		end
		if humanoid and humanoid.Parent then
			humanoid.WalkSpeed = oldWalkSpeed
			humanoid.JumpPower = oldJumpPower
		end

		activePlayers[player] = false
	end)
end

local function onCharacterAdded(player, character)
	local humanoid = character:WaitForChild("Humanoid", 5)
	if not humanoid then return end

	local lastHealth = humanoid.Health
	humanoid.HealthChanged:Connect(function(newHealth)
		if newHealth <= HEALTH_THRESHOLD and lastHealth > HEALTH_THRESHOLD then
			freezeCharacter(player, character)
		end
		lastHealth = newHealth
	end)
end

local function onPlayerAdded(player)
	activePlayers[player] = false
	player.CharacterAdded:Connect(function(char)
		onCharacterAdded(player, char)
	end)
	if player.Character then
		onCharacterAdded(player, player.Character)
	end
	player.AncestryChanged:Connect(function()
		if not player:IsDescendantOf(game) then
			activePlayers[player] = nil
		end
	end)
end

Players.PlayerAdded:Connect(onPlayerAdded)
for _, p in pairs(Players:GetPlayers()) do
	onPlayerAdded(p)
end
